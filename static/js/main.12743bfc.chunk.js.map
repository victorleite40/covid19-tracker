{"version":3,"sources":["services/api.js","assets/allCountries.js","components/Header/Header.js","components/Ranking/Ranking.js","components/StatsChart/StatsChart.js","pages/Main/index.js","components/Propragacao.js","components/NowActive.js","components/DailyData.js","pages/Local/index.js","routes.js","App.js","index.js","assets/arrow-up.svg","assets/arrow-down.svg"],"names":["apiCovid","axios","create","baseURL","allCountries","Country","Slug","ISO2","Header","history","useState","country","setCountry","className","Autocomplete","id","size","options","getOptionLabel","option","style","width","marginLeft","renderInput","params","TextField","label","variant","onChange","event","value","to","type","props","regions","setRegions","sort","setSort","arrowRot","setArrowRot","handleSort","choice","useEffect","a","get","response","data","Countries","loadGlobalRanking","page","onClick","alt","src","arrowDown","arrowUp","map","region","legend","display","position","Chart","this","title","height","labels","datasets","activeStats","recoveredStats","fatalStats","backgroundColor","hoverBackgroundColor","Component","Main","summary","setSummary","Global","loadGlobalSummary","nowActive","TotalConfirmed","TotalDeaths","TotalRecovered","NewConfirmed","NewRecovered","NewDeaths","toFixed","labelDate","fill","borderColor","borderWidth","hoverBorderColor","confirmedData","fatalData","maintainAspectRatio","usePointStyle","boxWidth","tooltips","legendColorBackground","mode","intersect","hover","activeData","recovered","fatal","previousSummary","setPreviousSummary","date","setDate","confirmed","setConfirmed","setFatal","activeChart","setActiveChart","dailyRecovered","setDailyRecovered","dailyFatal","setDailyFatal","useParams","lastRep","length","Confirmed","activeChartData","dailyRecoveredData","dailyFatalData","i","push","Date","slice","Deaths","Recovered","loadCountryTotalData","loadCountrySummary","newActive","Routes","path","exact","component","Local","children","App","ReactDOM","render","document","getElementById","module","exports"],"mappings":"+XAMeA,E,OAJEC,EAAMC,OAAO,CAC1BC,QAAS,gC,kBCwtCEC,EA3tCa,CACxB,CACAC,QAAS,SACTC,KAAM,SACNC,KAAM,MAEN,CACAF,QAAS,aACTC,KAAM,aACNC,KAAM,MAEN,CACAF,QAAS,+BACTC,KAAM,WACNC,KAAM,MAEN,CACAF,QAAS,YACTC,KAAM,YACNC,KAAM,MAEN,CACAF,QAAS,UACTC,KAAM,UACNC,KAAM,MAEN,CACAF,QAAS,SACTC,KAAM,SACNC,KAAM,MAEN,CACAF,QAAS,iBACTC,KAAM,iBACNC,KAAM,MAEN,CACAF,QAAS,UACTC,KAAM,UACNC,KAAM,MAEN,CACAF,QAAS,QACTC,KAAM,QACNC,KAAM,MAEN,CACAF,QAAS,cACTC,KAAM,cACNC,KAAM,MAEN,CACAF,QAAS,SACTC,KAAM,SACNC,KAAM,MAEN,CACAF,QAAS,aACTC,KAAM,aACNC,KAAM,MAEN,CACAF,QAAS,OACTC,KAAM,OACNC,KAAM,MAEN,CACAF,QAAS,SACTC,KAAM,SACNC,KAAM,MAEN,CACAF,QAAS,YACTC,KAAM,YACNC,KAAM,MAEN,CACAF,QAAS,UACTC,KAAM,UACNC,KAAM,MAEN,CACAF,QAAS,2BACTC,KAAM,2BACNC,KAAM,MAEN,CACAF,QAAS,gBACTC,KAAM,gBACNC,KAAM,MAEN,CACAF,QAAS,UACTC,KAAM,UACNC,KAAM,MAEN,CACAF,QAAS,WACTC,KAAM,WACNC,KAAM,MAEN,CACAF,QAAS,SACTC,KAAM,SACNC,KAAM,MAEN,CACAF,QAAS,oBACTC,KAAM,oBACNC,KAAM,MAEN,CACAF,QAAS,qBACTC,KAAM,qBACNC,KAAM,MAEN,CACAF,QAAS,UACTC,KAAM,UACNC,KAAM,MAEN,CACAF,QAAS,gBACTC,KAAM,gBACNC,KAAM,MAEN,CACAF,QAAS,OACTC,KAAM,OACNC,KAAM,MAEN,CACAF,QAAS,SACTC,KAAM,SACNC,KAAM,MAEN,CACAF,QAAS,UACTC,KAAM,UACNC,KAAM,MAEN,CACAF,QAAS,UACTC,KAAM,UACNC,KAAM,MAEN,CACAF,QAAS,eACTC,KAAM,eACNC,KAAM,MAEN,CACAF,QAAS,mBACTC,KAAM,mBACNC,KAAM,MAEN,CACAF,QAAS,SACTC,KAAM,SACNC,KAAM,MAEN,CACAF,QAAS,UACTC,KAAM,UACNC,KAAM,MAEN,CACAF,QAAS,yBACTC,KAAM,yBACNC,KAAM,MAEN,CACAF,QAAS,cACTC,KAAM,cACNC,KAAM,MAEN,CACAF,QAAS,UACTC,KAAM,UACNC,KAAM,MAEN,CACAF,QAAS,UACTC,KAAM,UACNC,KAAM,MAEN,CACAF,QAAS,YACTC,KAAM,YACNC,KAAM,MAEN,CACAF,QAAS,OACTC,KAAM,OACNC,KAAM,MAEN,CACAF,QAAS,UACTC,KAAM,UACNC,KAAM,MAEN,CACAF,QAAS,UACTC,KAAM,UACNC,KAAM,MAEN,CACAF,QAAS,QACTC,KAAM,QACNC,KAAM,MAEN,CACAF,QAAS,aACTC,KAAM,aACNC,KAAM,MAEN,CACAF,QAAS,SACTC,KAAM,SACNC,KAAM,MAEN,CACAF,QAAS,QACTC,KAAM,QACNC,KAAM,MAEN,CACAF,QAAS,UACTC,KAAM,UACNC,KAAM,MAEN,CACAF,QAAS,WACTC,KAAM,WACNC,KAAM,MAEN,CACAF,QAAS,SACTC,KAAM,SACNC,KAAM,MAEN,CACAF,QAAS,wBACTC,KAAM,wBACNC,KAAM,MAEN,CACAF,QAAS,+CACTC,KAAM,+CACNC,KAAM,MAEN,CACAF,QAAS,oBACTC,KAAM,SACNC,KAAM,MAEN,CACAF,QAAS,cACTC,KAAM,cACNC,KAAM,MAEN,CACAF,QAAS,UACTC,KAAM,UACNC,KAAM,MAEN,CACAF,QAAS,QACTC,KAAM,QACNC,KAAM,MAEN,CACAF,QAAS,SACTC,KAAM,SACNC,KAAM,MAEN,CACAF,QAAS,gBACTC,KAAM,cACNC,KAAM,MAEN,CACAF,QAAS,mBACTC,KAAM,mBACNC,KAAM,MAEN,CACAF,QAAS,cACTC,KAAM,cACNC,KAAM,MAEN,CACAF,QAAS,SACTC,KAAM,SACNC,KAAM,MAEN,CACAF,QAAS,UACTC,KAAM,UACNC,KAAM,MAEN,CACAF,QAAS,WACTC,KAAM,WACNC,KAAM,MAEN,CACAF,QAAS,QACTC,KAAM,QACNC,KAAM,MAEN,CACAF,QAAS,UACTC,KAAM,UACNC,KAAM,MAEN,CACAF,QAAS,YACTC,KAAM,YACNC,KAAM,MAEN,CACAF,QAAS,WACTC,KAAM,WACNC,KAAM,MAEN,CACAF,QAAS,UACTC,KAAM,UACNC,KAAM,MAEN,CACAF,QAAS,UACTC,KAAM,UACNC,KAAM,MAEN,CACAF,QAAS,WACTC,KAAM,WACNC,KAAM,MAEN,CACAF,QAAS,QACTC,KAAM,QACNC,KAAM,MAEN,CACAF,QAAS,yBACTC,KAAM,yBACNC,KAAM,MAEN,CACAF,QAAS,eACTC,KAAM,eACNC,KAAM,MAEN,CACAF,QAAS,eACTC,KAAM,eACNC,KAAM,MAEN,CACAF,QAAS,iBACTC,KAAM,iBACNC,KAAM,MAEN,CACAF,QAAS,aACTC,KAAM,aACNC,KAAM,MAEN,CACAF,QAAS,QACTC,KAAM,QACNC,KAAM,MAEN,CACAF,QAAS,UACTC,KAAM,UACNC,KAAM,MAEN,CACAF,QAAS,QACTC,KAAM,QACNC,KAAM,MAEN,CACAF,QAAS,aACTC,KAAM,aACNC,KAAM,MAEN,CACAF,QAAS,SACTC,KAAM,SACNC,KAAM,MAEN,CACAF,QAAS,YACTC,KAAM,YACNC,KAAM,MAEN,CACAF,QAAS,aACTC,KAAM,aACNC,KAAM,MAEN,CACAF,QAAS,QACTC,KAAM,QACNC,KAAM,MAEN,CACAF,QAAS,6BACTC,KAAM,2BACNC,KAAM,MAEN,CACAF,QAAS,sBACTC,KAAM,sBACNC,KAAM,MAEN,CACAF,QAAS,cACTC,KAAM,cACNC,KAAM,MAEN,CACAF,QAAS,cACTC,KAAM,cACNC,KAAM,MAEN,CACAF,QAAS,UACTC,KAAM,UACNC,KAAM,MAEN,CACAF,QAAS,UACTC,KAAM,UACNC,KAAM,MAEN,CACAF,QAAS,SACTC,KAAM,SACNC,KAAM,MAEN,CACAF,QAAS,gBACTC,KAAM,gBACNC,KAAM,MAEN,CACAF,QAAS,WACTC,KAAM,WACNC,KAAM,MAEN,CACAF,QAAS,2BACTC,KAAM,2BACNC,KAAM,MAEN,CACAF,QAAS,OACTC,KAAM,OACNC,KAAM,MAEN,CACAF,QAAS,SACTC,KAAM,SACNC,KAAM,MAEN,CACAF,QAAS,UACTC,KAAM,UACNC,KAAM,MAEN,CACAF,QAAS,UACTC,KAAM,UACNC,KAAM,MAEN,CACAF,QAAS,YACTC,KAAM,YACNC,KAAM,MAEN,CACAF,QAAS,UACTC,KAAM,UACNC,KAAM,MAEN,CACAF,QAAS,4BACTC,KAAM,4BACNC,KAAM,MAEN,CACAF,QAAS,UACTC,KAAM,UACNC,KAAM,MAEN,CACAF,QAAS,WACTC,KAAM,WACNC,KAAM,MAEN,CACAF,QAAS,WACTC,KAAM,WACNC,KAAM,MAEN,CACAF,QAAS,SACTC,KAAM,SACNC,KAAM,MAEN,CACAF,QAAS,aACTC,KAAM,aACNC,KAAM,MAEN,CACAF,QAAS,YACTC,KAAM,YACNC,KAAM,MAEN,CACAF,QAAS,+BACTC,KAAM,QACNC,KAAM,MAEN,CACAF,QAAS,UACTC,KAAM,UACNC,KAAM,MAEN,CACAF,QAAS,WACTC,KAAM,WACNC,KAAM,MAEN,CACAF,QAAS,iBACTC,KAAM,iBACNC,KAAM,MAEN,CACAF,QAAS,OACTC,KAAM,OACNC,KAAM,MAEN,CACAF,QAAS,4BACTC,KAAM,4BACNC,KAAM,MAEN,CACAF,QAAS,OACTC,KAAM,OACNC,KAAM,MAEN,CACAF,QAAS,wBACTC,KAAM,wBACNC,KAAM,MAEN,CACAF,QAAS,WACTC,KAAM,WACNC,KAAM,MAEN,CACAF,QAAS,qBACTC,KAAM,iBACNC,KAAM,MAEN,CACAF,QAAS,UACTC,KAAM,UACNC,KAAM,MAEN,CACAF,QAAS,UACTC,KAAM,UACNC,KAAM,MAEN,CACAF,QAAS,uBACTC,KAAM,uBACNC,KAAM,MAEN,CACAF,QAAS,eACTC,KAAM,eACNC,KAAM,MAEN,CACAF,QAAS,gBACTC,KAAM,gBACNC,KAAM,MAEN,CACAF,QAAS,aACTC,KAAM,aACNC,KAAM,MAEN,CACAF,QAAS,UACTC,KAAM,UACNC,KAAM,MAEN,CACAF,QAAS,sBACTC,KAAM,sBACNC,KAAM,MAEN,CACAF,QAAS,WACTC,KAAM,WACNC,KAAM,MAEN,CACAF,QAAS,UACTC,KAAM,UACNC,KAAM,MAEN,CACAF,QAAS,YACTC,KAAM,YACNC,KAAM,MAEN,CACAF,QAAS,OACTC,KAAM,OACNC,KAAM,MAEN,CACAF,QAAS,WACTC,KAAM,WACNC,KAAM,MAEN,CACAF,QAAS,cACTC,KAAM,cACNC,KAAM,MAEN,CACAF,QAAS,WACTC,KAAM,WACNC,KAAM,MAEN,CACAF,QAAS,mBACTC,KAAM,iBACNC,KAAM,MAEN,CACAF,QAAS,SACTC,KAAM,SACNC,KAAM,MAEN,CACAF,QAAS,2BACTC,KAAM,2BACNC,KAAM,MAEN,CACAF,QAAS,eACTC,KAAM,eACNC,KAAM,MAEN,CACAF,QAAS,UACTC,KAAM,UACNC,KAAM,MAEN,CACAF,QAAS,qBACTC,KAAM,SACNC,KAAM,MAEN,CACAF,QAAS,aACTC,KAAM,aACNC,KAAM,MAEN,CACAF,QAAS,iCACTC,KAAM,iCACNC,KAAM,MAEN,CACAF,QAAS,kCACTC,KAAM,YACNC,KAAM,MAEN,CACAF,QAAS,mBACTC,KAAM,mBACNC,KAAM,MAEN,CACAF,QAAS,8BACTC,KAAM,4BACNC,KAAM,MAEN,CACAF,QAAS,aACTC,KAAM,aACNC,KAAM,MAEN,CACAF,QAAS,SACTC,KAAM,SACNC,KAAM,MAEN,CACAF,QAAS,WACTC,KAAM,WACNC,KAAM,MAEN,CACAF,QAAS,iBACTC,KAAM,iBACNC,KAAM,MAEN,CACAF,QAAS,QACTC,KAAM,QACNC,KAAM,MAEN,CACAF,QAAS,aACTC,KAAM,aACNC,KAAM,MAEN,CACAF,QAAS,mBACTC,KAAM,mBACNC,KAAM,MAEN,CACAF,QAAS,QACTC,KAAM,QACNC,KAAM,MAEN,CACAF,QAAS,4BACTC,KAAM,4BACNC,KAAM,MAEN,CACAF,QAAS,gBACTC,KAAM,cACNC,KAAM,MAEN,CACAF,QAAS,oBACTC,KAAM,oBACNC,KAAM,MAEN,CACAF,QAAS,WACTC,KAAM,WACNC,KAAM,MAEN,CACAF,QAAS,QACTC,KAAM,QACNC,KAAM,MAEN,CACAF,QAAS,qBACTC,KAAM,SACNC,KAAM,MAEN,CACAF,QAAS,UACTC,KAAM,UACNC,KAAM,MAEN,CACAF,QAAS,cACTC,KAAM,cACNC,KAAM,MAEN,CACAF,QAAS,QACTC,KAAM,QACNC,KAAM,MAEN,CACAF,QAAS,UACTC,KAAM,UACNC,KAAM,MAEN,CACAF,QAAS,SACTC,KAAM,SACNC,KAAM,MAEN,CACAF,QAAS,YACTC,KAAM,YACNC,KAAM,MAEN,CACAF,QAAS,kBACTC,KAAM,kBACNC,KAAM,MAEN,CACAF,QAAS,wBACTC,KAAM,YACNC,KAAM,MAEN,CACAF,QAAS,YACTC,KAAM,YACNC,KAAM,MAEN,CACAF,QAAS,SACTC,KAAM,SACNC,KAAM,MAEN,CACAF,QAAS,eACTC,KAAM,eACNC,KAAM,MAEN,CACAF,QAAS,YACTC,KAAM,YACNC,KAAM,MAEN,CACAF,QAAS,UACTC,KAAM,UACNC,KAAM,MAEN,CACAF,QAAS,QACTC,KAAM,QACNC,KAAM,MAEN,CACAF,QAAS,WACTC,KAAM,WACNC,KAAM,MAEN,CACAF,QAAS,QACTC,KAAM,QACNC,KAAM,MAEN,CACAF,QAAS,mBACTC,KAAM,kBACNC,KAAM,MAEN,CACAF,QAAS,sBACTC,KAAM,sBACNC,KAAM,MAEN,CACAF,QAAS,sBACTC,KAAM,oBACNC,KAAM,MAEN,CACAF,QAAS,WACTC,KAAM,WACNC,KAAM,MAEN,CACAF,QAAS,uBACTC,KAAM,uBACNC,KAAM,MAEN,CACAF,QAAS,WACTC,KAAM,WACNC,KAAM,MAEN,CACAF,QAAS,OACTC,KAAM,OACNC,KAAM,MAEN,CACAF,QAAS,mBACTC,KAAM,eACNC,KAAM,MAEN,CACAF,QAAS,UACTC,KAAM,UACNC,KAAM,MAEN,CACAF,QAAS,2BACTC,KAAM,gBACNC,KAAM,MAEN,CACAF,QAAS,aACTC,KAAM,aACNC,KAAM,MAEN,CACAF,QAAS,SACTC,KAAM,SACNC,KAAM,MAEN,CACAF,QAAS,UACTC,KAAM,UACNC,KAAM,MAEN,CACAF,QAAS,QACTC,KAAM,QACNC,KAAM,MAEN,CACAF,QAAS,aACTC,KAAM,aACNC,KAAM,MAEN,CACAF,QAAS,UACTC,KAAM,UACNC,KAAM,MAEN,CACAF,QAAS,YACTC,KAAM,YACNC,KAAM,MAEN,CACAF,QAAS,6BACTC,KAAM,6BACNC,KAAM,MAEN,CACAF,QAAS,SACTC,KAAM,SACNC,KAAM,MAEN,CACAF,QAAS,cACTC,KAAM,cACNC,KAAM,MAEN,CACAF,QAAS,QACTC,KAAM,QACNC,KAAM,MAEN,CACAF,QAAS,UACTC,KAAM,UACNC,KAAM,MAEN,CACAF,QAAS,yBACTC,KAAM,YACNC,KAAM,MAEN,CACAF,QAAS,SACTC,KAAM,SACNC,KAAM,MAEN,CACAF,QAAS,4BACTC,KAAM,SACNC,KAAM,MAEN,CACAF,QAAS,UACTC,KAAM,UACNC,KAAM,MAEN,CACAF,QAAS,aACTC,KAAM,aACNC,KAAM,MAEN,CACAF,QAAS,WACTC,KAAM,WACNC,KAAM,MAEN,CACAF,QAAS,QACTC,KAAM,QACNC,KAAM,MAEN,CACAF,QAAS,iCACTC,KAAM,iCACNC,KAAM,MAEN,CACAF,QAAS,WACTC,KAAM,WACNC,KAAM,MAEN,CACAF,QAAS,8BACTC,KAAM,8BACNC,KAAM,MAEN,CACAF,QAAS,WACTC,KAAM,WACNC,KAAM,MAEN,CACAF,QAAS,WACTC,KAAM,WACNC,KAAM,MAEN,CACAF,QAAS,QACTC,KAAM,QACNC,KAAM,MAEN,CACAF,QAAS,4BACTC,KAAM,OACNC,KAAM,MAEN,CACAF,QAAS,aACTC,KAAM,aACNC,KAAM,MAEN,CACAF,QAAS,cACTC,KAAM,cACNC,KAAM,MAEN,CACAF,QAAS,SACTC,KAAM,SACNC,KAAM,MAEN,CACAF,QAAS,WACTC,KAAM,WACNC,KAAM,MAEN,CACAF,QAAS,gCACTC,KAAM,8BACNC,KAAM,MAEN,CACAF,QAAS,SACTC,KAAM,SACNC,KAAM,MAEN,CACAF,QAAS,aACTC,KAAM,aACNC,KAAM,MAEN,CACAF,QAAS,SACTC,KAAM,SACNC,KAAM,MAEN,CACAF,QAAS,SACTC,KAAM,SACNC,KAAM,MAEN,CACAF,QAAS,0BACTC,KAAM,wBACNC,KAAM,MAEN,CACAF,QAAS,QACTC,KAAM,QACNC,KAAM,MAEN,CACAF,QAAS,SACTC,KAAM,SACNC,KAAM,MAEN,CACAF,QAAS,kCACTC,KAAM,aACNC,KAAM,MAEN,CACAF,QAAS,aACTC,KAAM,aACNC,KAAM,MAEN,CACAF,QAAS,QACTC,KAAM,QACNC,KAAM,MAEN,CACAF,QAAS,+BACTC,KAAM,mCACNC,KAAM,MAEN,CACAF,QAAS,OACTC,KAAM,OACNC,KAAM,MAEN,CACAF,QAAS,aACTC,KAAM,aACNC,KAAM,MAEN,CACAF,QAAS,UACTC,KAAM,UACNC,KAAM,MAEN,CACAF,QAAS,WACTC,KAAM,UACNC,KAAM,MAEN,CACAF,QAAS,QACTC,KAAM,QACNC,KAAM,MAEN,CACAF,QAAS,gBACTC,KAAM,gBACNC,KAAM,MAEN,CACAF,QAAS,cACTC,KAAM,cACNC,KAAM,MAEN,CACAF,QAAS,UACTC,KAAM,UACNC,KAAM,MAEN,CACAF,QAAS,iBACTC,KAAM,iBACNC,KAAM,MAEN,CACAF,QAAS,SACTC,KAAM,SACNC,KAAM,MAEN,CACAF,QAAS,uBACTC,KAAM,sBACNC,KAAM,MAEN,CACAF,QAAS,SACTC,KAAM,SACNC,KAAM,MAEN,CACAF,QAAS,WACTC,KAAM,WACNC,KAAM,MAEN,CACAF,QAAS,UACTC,KAAM,UACNC,KAAM,MAEN,CACAF,QAAS,iBACTC,KAAM,iBACNC,KAAM,MAEN,CACAF,QAAS,eACTC,KAAM,eACNC,KAAM,MAEN,CACAF,QAAS,UACTC,KAAM,UACNC,KAAM,MAEN,CACAF,QAAS,QACTC,KAAM,QACNC,KAAM,MAEN,CACAF,QAAS,UACTC,KAAM,UACNC,KAAM,MAEN,CACAF,QAAS,OACTC,KAAM,OACNC,KAAM,MAEN,CACAF,QAAS,gBACTC,KAAM,gBACNC,KAAM,MAEN,CACAF,QAAS,QACTC,KAAM,QACNC,KAAM,MAEN,CACAF,QAAS,aACTC,KAAM,aACNC,KAAM,MAEN,CACAF,QAAS,aACTC,KAAM,aACNC,KAAM,MAEN,CACAF,QAAS,WACTC,KAAM,WACNC,KAAM,O,OC9sCK,SAASC,EAAT,GAA6B,EAAXC,QAAY,IAAD,EAEVC,mBAAS,IAFC,mBAEjCC,EAFiC,KAExBC,EAFwB,KAIxC,OACI,yBAAKC,UAAU,UACX,8DAEA,kBAACC,EAAA,EAAD,CACIC,GAAG,sBACHC,KAAK,QACLC,QAASb,EACTc,eAAgB,SAACC,GAAD,OAAYA,EAAOd,SACnCe,MAAO,CAAEC,MAAO,IAAKC,WAAY,IACjCC,YAAa,SAACC,GAAD,OAAY,kBAACC,EAAA,EAAD,iBAAeD,EAAf,CAAuBE,MAAM,wBAAqBC,QAAQ,eACnFC,SAAU,SAACC,EAAOC,GACd,GAAIA,EAAO,OAAOlB,EAAWkB,EAAMxB,SAG3C,kBAAC,IAAD,CAAMyB,GAAE,2BAAsBpB,IAA9B,IAA2C,4BAAQqB,KAAK,SAASnB,UAAU,OAAhC,UAA3C,M,6CCpBG,SAASL,EAAOyB,GAAQ,IAAD,EACJvB,mBAAS,IADL,mBAC3BwB,EAD2B,KAClBC,EADkB,OAGVzB,mBAAS,aAHC,mBAG3B0B,EAH2B,KAGrBC,EAHqB,OAIF3B,oBAAS,GAJP,mBAI3B4B,EAJ2B,KAIjBC,EAJiB,KAkBlC,SAASC,EAAWC,GACZL,IAAOK,GAAe,KAAPL,GACfC,EAAQI,EAAS,KACjBF,GAAY,KAEZF,EAAQI,GACRF,GAAY,IAOpB,OAtBAG,qBAAU,WAAM,4CACZ,4BAAAC,EAAA,sEAC2B3C,EAAS4C,IAAI,YADxC,OACUC,EADV,OAGIV,EAAWU,EAASC,KAAKC,WAH7B,4CADY,uBAAC,WAAD,wBAMZC,KACD,CAACZ,IAgBA,yBAAKvB,UAAW,UAAYoB,EAAMgB,MAC9B,8CAEA,6BACI,+BACI,4BACI,4BAAI,4BAAQC,QAAS,kBAAMV,EAAW,MAAlC,UAA+C,yBAAKW,IAAI,GAAGC,IAAa,KAAPhB,EAAaE,EAAW,KAAzF,MACJ,4BAAI,4BAAQY,QAAS,kBAAMV,EAAW,eAAlC,aAA2D,yBAAKW,IAAI,GAAGC,IAAa,cAAPhB,EAAwBE,EAAY,GAAKe,IAAsB,eAAPjB,GAAwBE,EAAYgB,IAAe,KAAxL,MACJ,4BAAI,4BAAQJ,QAAS,kBAAMV,EAAW,eAAlC,aAA2D,yBAAKW,IAAI,GAAGC,IAAa,cAAPhB,EAAwBE,EAAY,GAAKe,IAAsB,eAAPjB,GAAwBE,EAAYgB,IAAe,KAAxL,MACJ,4BAAI,4BAAQJ,QAAS,kBAAMV,EAAW,WAAlC,SAAmD,yBAAKW,IAAI,GAAGC,IAAa,UAAPhB,EAAoBE,EAAY,GAAKe,IAAsB,WAAPjB,GAAoBE,EAAYgB,IAAe,KAAxK,OAEPpB,EAcIqB,KAAI,SAAAC,U,4CC5DvBvC,G,OAAU,CACfwC,OAAQ,CACPC,SAAS,EACTC,SAAU,YAISC,E,uKAEjB,OACE,yBAAK/C,UAAW,aAAegD,KAAK5B,MAAMgB,MACxC,4BAAKY,KAAK5B,MAAM6B,MAAQ,mBAC9B,kBAAC,IAAD,CAAUzC,MAAO,IAAK0C,OAAQ,GAC7BjB,KAAM,CACLkB,OAAQ,CACP,SACA,YACA,SAEDC,SAAU,CAAC,CACVnB,KAAM,CAACe,KAAK5B,MAAMiC,YAAcL,KAAK5B,MAAMkC,eAAgBN,KAAK5B,MAAMmC,YACtEC,gBAAiB,CAChB,UACA,UACA,WAEDC,qBAAsB,CACrB,UACA,UACA,cAIJrD,QAASA,S,GA1BwBsD,a,OCHpB,SAASC,IAAQ,IAAD,EACG9D,mBAAS,IADZ,mBACpB+D,EADoB,KACXC,EADW,KAM3BhC,qBAAU,WAAK,4CACX,4BAAAC,EAAA,sEAC2B3C,EAAS4C,IAAI,YADxC,OACUC,EADV,OAGI6B,EAAW7B,EAASC,KAAK6B,QAH7B,4CADW,uBAAC,WAAD,wBAMXC,KACD,IAEH,IAAIC,EAAYJ,EAAQK,eAAiBL,EAAQM,YAAcN,EAAQO,eACnEd,EAAyB,IAAVW,EAAeJ,EAAQK,eACtCX,EAAyC,IAAvBM,EAAQO,eAAoBP,EAAQK,eACtDV,EAAkC,IAApBK,EAAQM,YAAiBN,EAAQK,eAKnD,OACI,oCACA,kBAACtE,EAAD,MACA,yBAAKK,UAAU,mBACX,yBAAKA,UAAU,iBACX,8CACA,yDAFJ,IAE2C,+BAAK4D,EAAQK,eAAb,KACvC,yBAAKjE,UAAU,iBACX,4BACI,uBAAGA,UAAU,OAAb,MAAwB4D,EAAQQ,aAAhC,KACA,uBAAGpE,UAAU,cAAb,IAA6BgE,EAA7B,KACA,+BAAI,gDAAJ,MAEJ,4BACI,uBAAGhE,UAAU,OAAb,MAAwB4D,EAAQS,aAAhC,KACA,uBAAGrE,UAAU,cAAb,IAA6B4D,EAAQO,eAArC,KACA,+BAAI,mDAAJ,MAEJ,4BACI,uBAAGnE,UAAU,OAAb,MAAwB4D,EAAQU,UAAhC,KACA,uBAAGtE,UAAU,cAAb,IAA6B4D,EAAQM,YAArC,KACA,+BAAI,+CAAJ,QAKZ,kBAAC,EAAD,CAAS9B,KAAM,SAEf,kBAAC,EAAD,CAAYa,MAAO,SAAUb,KAAM,OAAQiB,YAAaA,EAAYkB,QAAQ,GAAIjB,eAAgBA,EAAeiB,QAAQ,GAAIhB,WAAYA,EAAWgB,QAAQ,O,ICzDjJxB,E,uKAEjB,OACE,yBAAK/C,UAAU,oBACb,8DACA,kBAAC,IAAD,CACEiC,KAAM,CACJkB,OAAQH,KAAK5B,MAAMoD,UACnBpB,SAAU,CACR,CACEvC,MAAO,cACP4D,MAAM,EACNjB,gBAAiB,yBACjBkB,YAAa,sBACbC,YAAa,EACblB,qBAAsB,sBACtBmB,iBAAkB,sBAClB3C,KAAMe,KAAK5B,MAAMyD,eAEnB,CACEhE,MAAO,SACP4D,MAAM,EACNjB,gBAAiB,yBACjBkB,YAAa,mBACbC,YAAa,EACblB,qBAAsB,mBACtBmB,iBAAkB,mBAClB3C,KAAMe,KAAK5B,MAAM0D,aAIvBtE,MAAO,IACP0C,OAAQ,GACR9C,QACE,CACE2E,qBAAqB,EACrBnC,OAAQ,CACNE,SAAU,MACVK,OAAQ,CACN6B,eAAe,EACfC,SAAU,IAGdC,SAAU,CACRC,sBAAuB,mBACvBC,KAAM,QACNC,WAAW,GAEbC,MAAO,CACLF,KAAM,QACNC,WAAW,W,GAlDQ3B,aCAdX,E,uKAEjB,OACE,yBAAK/C,UAAU,kBACb,2DACA,kBAAC,IAAD,CACEiC,KAAM,CACJkB,OAAQH,KAAK5B,MAAMoD,UACnBpB,SAAU,CACR,CACEvC,MAAO,4BACP4D,MAAM,EACNjB,gBAAiB,yBACjBkB,YAAa,uBACbC,YAAa,EACblB,qBAAsB,uBACtBmB,iBAAkB,uBAClB3C,KAAMe,KAAK5B,MAAMmE,cAIvB/E,MAAO,IACP0C,OAAQ,GACR9C,QACE,CACE2E,qBAAqB,EACrBnC,OAAQ,CACNE,SAAU,MACVK,OAAQ,CACN6B,eAAe,EACfC,SAAU,IAGdC,SAAU,CACRC,sBAAuB,mBACvBC,KAAM,QACNC,WAAW,GAEbC,MAAO,CACLF,KAAM,QACNC,WAAW,W,GAxCQ3B,aCAdX,E,uKAEjB,OACE,yBAAK/C,UAAU,kBACb,2CACA,kBAAC,IAAD,CACEiC,KAAM,CACJkB,OAAQH,KAAK5B,MAAMoD,UACnBpB,SAAU,CACR,CACEvC,MAAO,YACP4D,MAAM,EACNjB,gBAAiB,UACjBkB,YAAa,UACbC,YAAa,EACblB,qBAAsB,UACtBmB,iBAAkB,UAClB3C,KAAMe,KAAK5B,MAAMoE,WAEnB,CACE3E,MAAO,QACP4D,MAAM,EACNjB,gBAAiB,UACjBkB,YAAa,UACbC,YAAa,EACblB,qBAAsB,UACtBmB,iBAAkB,UAClB3C,KAAMe,KAAK5B,MAAMqE,SAIvBjF,MAAO,IACP0C,OAAQ,GACR9C,QACE,CACE2E,qBAAqB,EACrBnC,OAAQ,CACNE,SAAU,MACVK,OAAQ,CACN6B,eAAe,EACfC,SAAU,IAGdC,SAAU,CACRC,sBAAuB,mBACvBC,KAAM,QACNC,WAAW,GAEbC,MAAO,CACLF,KAAM,QACNC,WAAW,W,GAlDQ3B,a,OCWpB,SAASC,IAAQ,IAAD,EACG9D,mBAAS,IADZ,mBACpB+D,EADoB,KACXC,EADW,OAEmBhE,mBAAS,IAF5B,mBAEpB6F,EAFoB,KAEHC,EAFG,OAOH9F,mBAAS,IAPN,mBAOpB+F,EAPoB,KAOdC,EAPc,OAQOhG,mBAAS,IARhB,mBAQpBiG,EARoB,KAQTC,EARS,OASDlG,mBAAS,IATR,mBASpB4F,EAToB,KASbO,EATa,OAUWnG,mBAAS,IAVpB,mBAUpBoG,EAVoB,KAUPC,EAVO,OAYiBrG,mBAAS,IAZ1B,mBAYpBsG,EAZoB,KAYJC,EAZI,OAaSvG,mBAAS,IAblB,mBAapBwG,EAboB,KAaRC,EAbQ,KAenBxG,EAAYyG,cAAZzG,QAER+B,qBAAU,WAAK,4CAIX,8BAAAC,EAAA,sEAC2B3C,EAAS4C,IAAT,yBAA+BjC,IAD1D,OACUkC,EADV,OAIUwE,EAA6D,IAAlDxE,EAASC,KAAKD,EAASC,KAAKwE,OAAO,GAAGC,UAAiB,EAAI,EAE5E7C,EAAW7B,EAASC,KAAKD,EAASC,KAAKwE,OAAOD,IAC9Cb,EAAmB3D,EAASC,KAAMD,EAASC,KAAKwE,OAAOD,EAAS,IAPpE,4CAJW,kEAiBX,4CAAA1E,EAAA,sEAC2B3C,EAAS4C,IAAT,yBAA+BjC,IAD1D,OAWI,IAVMkC,EADV,OAGUwC,EAAY,GACZK,EAAgB,GAChBC,EAAY,GACZ6B,EAAkB,GAElBC,EAAqB,GACrBC,EAAiB,GAEdC,EAAE,EAAGA,EAAE9E,EAASC,KAAKwE,OAAQK,GAAG,EAEJ,IAA7B9E,EAASC,KAAK6E,GAAGJ,WAEjBlC,EAAUuC,KAAK/E,EAASC,KAAK6E,GAAGE,KAAKC,MAAM,EAAG,KAC9CpC,EAAckC,KAAK/E,EAASC,KAAK6E,GAAGJ,WACpC5B,EAAUiC,KAAK/E,EAASC,KAAK6E,GAAGI,QAGhCP,EAAgBI,KAAK/E,EAASC,KAAK6E,GAAGJ,UAAU1E,EAASC,KAAK6E,GAAGK,UAAUnF,EAASC,KAAK6E,GAAGI,QAG5FN,EAAmBG,KAAK/E,EAASC,KAAK6E,GAAGK,WACzCN,EAAeE,KAAK/E,EAASC,KAAK6E,GAAGI,SAErCJ,IAKFN,EAA6D,IAAlDxE,EAASC,KAAKD,EAASC,KAAKwE,OAAO,GAAGC,UAAiB,EAAI,EAG5ElC,EAAUuC,KAAK/E,EAASC,KAAKD,EAASC,KAAKwE,OAAOD,GAASQ,KAAKC,MAAM,EAAG,KACzEpC,EAAckC,KAAK/E,EAASC,KAAKD,EAASC,KAAKwE,OAAOD,GAASE,WAC/D5B,EAAUiC,KAAK/E,EAASC,KAAKD,EAASC,KAAKwE,OAAOD,GAASU,QAC3DP,EAAgBI,KAAK/E,EAASC,KAAKD,EAASC,KAAKwE,OAAOD,GAASE,UAAU1E,EAASC,KAAKD,EAASC,KAAKwE,OAAOD,GAASW,UAAUnF,EAASC,KAAKD,EAASC,KAAKwE,OAAOD,GAASU,QAE7KN,EAAmBG,KAAK/E,EAASC,KAAKD,EAASC,KAAKwE,OAAOD,GAASW,WACpEN,EAAeE,KAAK/E,EAASC,KAAKD,EAASC,KAAKwE,OAAOD,GAASU,QAEhErB,EAAQrB,GACRuB,EAAalB,GACbmB,EAASlB,GACToB,EAAeS,GAEfP,EAAkBQ,GAClBN,EAAcO,GAhDlB,6CAjBW,0DAmEXO,GAnEW,mCAoEXC,KACD,CAACvH,IAEJ,IAAMwH,EAAa1D,EAAQ8C,UAAY9C,EAAQuD,UAAYvD,EAAQsD,QAAWxB,EAAgBgB,UAAYhB,EAAgByB,UAAYzB,EAAgBwB,QAChJlD,EAAaJ,EAAQ8C,UAAY9C,EAAQuD,UAAYvD,EAAQsD,OAE/D7D,EAAyB,IAAVW,EAAeJ,EAAQ8C,UACtCpD,EAAoC,IAAlBM,EAAQuD,UAAevD,EAAQ8C,UACjDnD,EAA6B,IAAfK,EAAQsD,OAAYtD,EAAQ8C,UAK9C,OACI,oCACA,kBAAC/G,EAAD,MACA,yBAAKK,UAAU,kBACX,yBAAKA,UAAU,iBACX,gCAAM4D,EAAQpE,QAAU,WAAxB,KACA,yDAFJ,IAE2C,+BAAKoE,EAAQ8C,UAAb,KACvC,yBAAK1G,UAAU,iBACX,4BACI,uBAAGA,UAAU,OAAb,IAAuBsH,EAAU,EAAK,KAAOA,EAAY,MAAQA,EAAoB,EAAVA,GAA3E,KACA,uBAAGtH,UAAU,cAAb,IAA6BgE,EAA7B,KACA,+BAAI,gDAAJ,MAEJ,4BACI,uBAAGhE,UAAU,OAAb,MAAwB4D,EAAQuD,UAAUzB,EAAgByB,UAA1D,KACA,uBAAGnH,UAAU,cAAb,IAA6B4D,EAAQuD,UAArC,KACA,+BAAI,mDAAJ,MAEJ,4BACI,uBAAGnH,UAAU,OAAb,MAAwB4D,EAAQsD,OAASxB,EAAgBwB,OAAzD,KACA,uBAAGlH,UAAU,cAAb,IAA6B4D,EAAQsD,OAArC,KACA,+BAAI,+CAAJ,QAKZ,kBAAC,EAAD,CAAa1C,UAAWoB,EAAMf,cAAeiB,EAAWhB,UAAWW,IACnE,kBAAC,EAAD,CAAWjB,UAAWoB,EAAML,WAAYU,IAExC,kBAAC,EAAD,CAAS7D,KAAM,UAEf,kBAAC,EAAD,CAAYa,MAAOW,EAAQpE,QAAS4C,KAAM,QAASiB,YAAaA,EAAYkB,QAAQ,GAAIjB,eAAgBA,EAAeiB,QAAQ,GAAIhB,WAAYA,EAAWgB,QAAQ,KAElK,kBAAC,EAAD,CAAWC,UAAWoB,EAAMJ,UAAWW,EAAgBV,MAAOY,MC3I3D,SAASkB,IACpB,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,oBAAoBC,OAAK,EAACC,UAAW/D,IACjD,kBAAC,IAAD,CAAO6D,KAAK,4BAA4BC,OAAK,EAACC,UAAWC,EAAQC,SAAU,kBAAC,EAAD,UCG5EC,MATf,WAEE,OACE,yBAAK7H,UAAU,OACb,kBAACuH,EAAD,QCLNO,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,mBCJjDC,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,yC","file":"static/js/main.12743bfc.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst apiCovid = axios.create({\r\n    baseURL: 'https://api.covid19api.com/',\r\n});\r\n\r\nexport default apiCovid;","export const allCountries = [\r\n    { \r\n    Country: \"Rwanda\", \r\n    Slug: \"rwanda\", \r\n    ISO2: \"RW\" \r\n    },\r\n    {\r\n    Country: \"Tajikistan\",\r\n    Slug: \"tajikistan\",\r\n    ISO2: \"TJ\"\r\n    },\r\n    {\r\n    Country: \"Tanzania, United Republic of\",\r\n    Slug: \"tanzania\",\r\n    ISO2: \"TZ\"\r\n    },\r\n    {\r\n    Country: \"Gibraltar\",\r\n    Slug: \"gibraltar\",\r\n    ISO2: \"GI\"\r\n    },\r\n    {\r\n    Country: \"Iceland\",\r\n    Slug: \"iceland\",\r\n    ISO2: \"IS\"\r\n    },\r\n    {\r\n    Country: \"Israel\",\r\n    Slug: \"israel\",\r\n    ISO2: \"IL\"\r\n    },\r\n    {\r\n    Country: \"Western Sahara\",\r\n    Slug: \"western-sahara\",\r\n    ISO2: \"EH\"\r\n    },\r\n    {\r\n    Country: \"Bahamas\",\r\n    Slug: \"bahamas\",\r\n    ISO2: \"BS\"\r\n    },\r\n    {\r\n    Country: \"China\",\r\n    Slug: \"china\",\r\n    ISO2: \"CN\"\r\n    },\r\n    {\r\n    Country: \"El Salvador\",\r\n    Slug: \"el-salvador\",\r\n    ISO2: \"SV\"\r\n    },\r\n    {\r\n    Country: \"France\",\r\n    Slug: \"france\",\r\n    ISO2: \"FR\"\r\n    },\r\n    {\r\n    Country: \"Seychelles\",\r\n    Slug: \"seychelles\",\r\n    ISO2: \"SC\"\r\n    },\r\n    {\r\n    Country: \"Fiji\",\r\n    Slug: \"fiji\",\r\n    ISO2: \"FJ\"\r\n    },\r\n    {\r\n    Country: \"Gambia\",\r\n    Slug: \"gambia\",\r\n    ISO2: \"GM\"\r\n    },\r\n    {\r\n    Country: \"Guatemala\",\r\n    Slug: \"guatemala\",\r\n    ISO2: \"GT\"\r\n    },\r\n    {\r\n    Country: \"Myanmar\",\r\n    Slug: \"myanmar\",\r\n    ISO2: \"MM\"\r\n    },\r\n    {\r\n    Country: \"Northern Mariana Islands\",\r\n    Slug: \"northern-mariana-islands\",\r\n    ISO2: \"MP\"\r\n    },\r\n    {\r\n    Country: \"Guinea-Bissau\",\r\n    Slug: \"guinea-bissau\",\r\n    ISO2: \"GW\"\r\n    },\r\n    {\r\n    Country: \"Ireland\",\r\n    Slug: \"ireland\",\r\n    ISO2: \"IE\"\r\n    },\r\n    {\r\n    Country: \"Portugal\",\r\n    Slug: \"portugal\",\r\n    ISO2: \"PT\"\r\n    },\r\n    {\r\n    Country: \"Turkey\",\r\n    Slug: \"turkey\",\r\n    ISO2: \"TR\"\r\n    },\r\n    {\r\n    Country: \"ALA Aland Islands\",\r\n    Slug: \"ala-aland-islands\",\r\n    ISO2: \"AX\"\r\n    },\r\n    {\r\n    Country: \"Dominican Republic\",\r\n    Slug: \"dominican-republic\",\r\n    ISO2: \"DO\"\r\n    },\r\n    {\r\n    Country: \"Estonia\",\r\n    Slug: \"estonia\",\r\n    ISO2: \"EE\"\r\n    },\r\n    {\r\n    Country: \"Faroe Islands\",\r\n    Slug: \"faroe-islands\",\r\n    ISO2: \"FO\"\r\n    },\r\n    {\r\n    Country: \"Peru\",\r\n    Slug: \"peru\",\r\n    ISO2: \"PE\"\r\n    },\r\n    {\r\n    Country: \"Angola\",\r\n    Slug: \"angola\",\r\n    ISO2: \"AO\"\r\n    },\r\n    {\r\n    Country: \"Bolivia\",\r\n    Slug: \"bolivia\",\r\n    ISO2: \"BO\"\r\n    },\r\n    {\r\n    Country: \"Comoros\",\r\n    Slug: \"comoros\",\r\n    ISO2: \"KM\"\r\n    },\r\n    {\r\n    Country: \"Cook Islands\",\r\n    Slug: \"cook-islands\",\r\n    ISO2: \"CK\"\r\n    },\r\n    {\r\n    Country: \"French Polynesia\",\r\n    Slug: \"french-polynesia\",\r\n    ISO2: \"PF\"\r\n    },\r\n    {\r\n    Country: \"Tuvalu\",\r\n    Slug: \"tuvalu\",\r\n    ISO2: \"TV\"\r\n    },\r\n    {\r\n    Country: \"Algeria\",\r\n    Slug: \"algeria\",\r\n    ISO2: \"DZ\"\r\n    },\r\n    {\r\n    Country: \"Bosnia and Herzegovina\",\r\n    Slug: \"bosnia-and-herzegovina\",\r\n    ISO2: \"BA\"\r\n    },\r\n    {\r\n    Country: \"Philippines\",\r\n    Slug: \"philippines\",\r\n    ISO2: \"PH\"\r\n    },\r\n    {\r\n    Country: \"Uruguay\",\r\n    Slug: \"uruguay\",\r\n    ISO2: \"UY\"\r\n    },\r\n    {\r\n    Country: \"Andorra\",\r\n    Slug: \"andorra\",\r\n    ISO2: \"AD\"\r\n    },\r\n    {\r\n    Country: \"Greenland\",\r\n    Slug: \"greenland\",\r\n    ISO2: \"GL\"\r\n    },\r\n    {\r\n    Country: \"Mali\",\r\n    Slug: \"mali\",\r\n    ISO2: \"ML\"\r\n    },\r\n    {\r\n    Country: \"Morocco\",\r\n    Slug: \"morocco\",\r\n    ISO2: \"MA\"\r\n    },\r\n    {\r\n    Country: \"Nigeria\",\r\n    Slug: \"nigeria\",\r\n    ISO2: \"NG\"\r\n    },\r\n    {\r\n    Country: \"Sudan\",\r\n    Slug: \"sudan\",\r\n    ISO2: \"SD\"\r\n    },\r\n    {\r\n    Country: \"Guadeloupe\",\r\n    Slug: \"guadeloupe\",\r\n    ISO2: \"GP\"\r\n    },\r\n    {\r\n    Country: \"Guyana\",\r\n    Slug: \"guyana\",\r\n    ISO2: \"GY\"\r\n    },\r\n    {\r\n    Country: \"Niger\",\r\n    Slug: \"niger\",\r\n    ISO2: \"NE\"\r\n    },\r\n    {\r\n    Country: \"Ecuador\",\r\n    Slug: \"ecuador\",\r\n    ISO2: \"EC\"\r\n    },\r\n    {\r\n    Country: \"Pitcairn\",\r\n    Slug: \"pitcairn\",\r\n    ISO2: \"PN\"\r\n    },\r\n    {\r\n    Country: \"Poland\",\r\n    Slug: \"poland\",\r\n    ISO2: \"PL\"\r\n    },\r\n    {\r\n    Country: \"Saint Kitts and Nevis\",\r\n    Slug: \"saint-kitts-and-nevis\",\r\n    ISO2: \"KN\"\r\n    },\r\n    {\r\n    Country: \"South Georgia and the South Sandwich Islands\",\r\n    Slug: \"south-georgia-and-the-south-sandwich-islands\",\r\n    ISO2: \"GS\"\r\n    },\r\n    {\r\n    Country: \"Brunei Darussalam\",\r\n    Slug: \"brunei\",\r\n    ISO2: \"BN\"\r\n    },\r\n    {\r\n    Country: \"Isle of Man\",\r\n    Slug: \"isle-of-man\",\r\n    ISO2: \"IM\"\r\n    },\r\n    {\r\n    Country: \"Lesotho\",\r\n    Slug: \"lesotho\",\r\n    ISO2: \"LS\"\r\n    },\r\n    {\r\n    Country: \"Samoa\",\r\n    Slug: \"samoa\",\r\n    ISO2: \"WS\"\r\n    },\r\n    {\r\n    Country: \"Serbia\",\r\n    Slug: \"serbia\",\r\n    ISO2: \"RS\"\r\n    },\r\n    {\r\n    Country: \"Korea (North)\",\r\n    Slug: \"korea-north\",\r\n    ISO2: \"KP\"\r\n    },\r\n    {\r\n    Country: \"Papua New Guinea\",\r\n    Slug: \"papua-new-guinea\",\r\n    ISO2: \"PG\"\r\n    },\r\n    {\r\n    Country: \"Afghanistan\",\r\n    Slug: \"afghanistan\",\r\n    ISO2: \"AF\"\r\n    },\r\n    {\r\n    Country: \"Greece\",\r\n    Slug: \"greece\",\r\n    ISO2: \"GR\"\r\n    },\r\n    {\r\n    Country: \"Grenada\",\r\n    Slug: \"grenada\",\r\n    ISO2: \"GD\"\r\n    },\r\n    {\r\n    Country: \"Barbados\",\r\n    Slug: \"barbados\",\r\n    ISO2: \"BB\"\r\n    },\r\n    {\r\n    Country: \"Japan\",\r\n    Slug: \"japan\",\r\n    ISO2: \"JP\"\r\n    },\r\n    {\r\n    Country: \"Somalia\",\r\n    Slug: \"somalia\",\r\n    ISO2: \"SO\"\r\n    },\r\n    {\r\n    Country: \"Sri Lanka\",\r\n    Slug: \"sri-lanka\",\r\n    ISO2: \"LK\"\r\n    },\r\n    {\r\n    Country: \"Suriname\",\r\n    Slug: \"suriname\",\r\n    ISO2: \"SR\"\r\n    },\r\n    {\r\n    Country: \"Tokelau\",\r\n    Slug: \"tokelau\",\r\n    ISO2: \"TK\"\r\n    },\r\n    {\r\n    Country: \"Bermuda\",\r\n    Slug: \"bermuda\",\r\n    ISO2: \"BM\"\r\n    },\r\n    {\r\n    Country: \"Kiribati\",\r\n    Slug: \"kiribati\",\r\n    ISO2: \"KI\"\r\n    },\r\n    {\r\n    Country: \"Libya\",\r\n    Slug: \"libya\",\r\n    ISO2: \"LY\"\r\n    },\r\n    {\r\n    Country: \"British Virgin Islands\",\r\n    Slug: \"british-virgin-islands\",\r\n    ISO2: \"VG\"\r\n    },\r\n    {\r\n    Country: \"Saudi Arabia\",\r\n    Slug: \"saudi-arabia\",\r\n    ISO2: \"SA\"\r\n    },\r\n    {\r\n    Country: \"Turkmenistan\",\r\n    Slug: \"turkmenistan\",\r\n    ISO2: \"TM\"\r\n    },\r\n    {\r\n    Country: \"American Samoa\",\r\n    Slug: \"american-samoa\",\r\n    ISO2: \"AS\"\r\n    },\r\n    {\r\n    Country: \"Kazakhstan\",\r\n    Slug: \"kazakhstan\",\r\n    ISO2: \"KZ\"\r\n    },\r\n    {\r\n    Country: \"Benin\",\r\n    Slug: \"benin\",\r\n    ISO2: \"BJ\"\r\n    },\r\n    {\r\n    Country: \"Croatia\",\r\n    Slug: \"croatia\",\r\n    ISO2: \"HR\"\r\n    },\r\n    {\r\n    Country: \"Haiti\",\r\n    Slug: \"haiti\",\r\n    ISO2: \"HT\"\r\n    },\r\n    {\r\n    Country: \"Kyrgyzstan\",\r\n    Slug: \"kyrgyzstan\",\r\n    ISO2: \"KG\"\r\n    },\r\n    {\r\n    Country: \"Mexico\",\r\n    Slug: \"mexico\",\r\n    ISO2: \"MX\"\r\n    },\r\n    {\r\n    Country: \"Nicaragua\",\r\n    Slug: \"nicaragua\",\r\n    ISO2: \"NI\"\r\n    },\r\n    {\r\n    Country: \"Antarctica\",\r\n    Slug: \"antarctica\",\r\n    ISO2: \"AQ\"\r\n    },\r\n    {\r\n    Country: \"Nepal\",\r\n    Slug: \"nepal\",\r\n    ISO2: \"NP\"\r\n    },\r\n    {\r\n    Country: \"Saint-Martin (French part)\",\r\n    Slug: \"saint-martin-french-part\",\r\n    ISO2: \"MF\"\r\n    },\r\n    {\r\n    Country: \"Trinidad and Tobago\",\r\n    Slug: \"trinidad-and-tobago\",\r\n    ISO2: \"TT\"\r\n    },\r\n    {\r\n    Country: \"Netherlands\",\r\n    Slug: \"netherlands\",\r\n    ISO2: \"NL\"\r\n    },\r\n    {\r\n    Country: \"Saint Lucia\",\r\n    Slug: \"saint-lucia\",\r\n    ISO2: \"LC\"\r\n    },\r\n    {\r\n    Country: \"Austria\",\r\n    Slug: \"austria\",\r\n    ISO2: \"AT\"\r\n    },\r\n    {\r\n    Country: \"Finland\",\r\n    Slug: \"finland\",\r\n    ISO2: \"FI\"\r\n    },\r\n    {\r\n    Country: \"Kuwait\",\r\n    Slug: \"kuwait\",\r\n    ISO2: \"KW\"\r\n    },\r\n    {\r\n    Country: \"Liechtenstein\",\r\n    Slug: \"liechtenstein\",\r\n    ISO2: \"LI\"\r\n    },\r\n    {\r\n    Country: \"Maldives\",\r\n    Slug: \"maldives\",\r\n    ISO2: \"MV\"\r\n    },\r\n    {\r\n    Country: \"Central African Republic\",\r\n    Slug: \"central-african-republic\",\r\n    ISO2: \"CF\"\r\n    },\r\n    {\r\n    Country: \"Guam\",\r\n    Slug: \"guam\",\r\n    ISO2: \"GU\"\r\n    },\r\n    {\r\n    Country: \"Belize\",\r\n    Slug: \"belize\",\r\n    ISO2: \"BZ\"\r\n    },\r\n    {\r\n    Country: \"Lao PDR\",\r\n    Slug: \"lao-pdr\",\r\n    ISO2: \"LA\"\r\n    },\r\n    {\r\n    Country: \"Liberia\",\r\n    Slug: \"liberia\",\r\n    ISO2: \"LR\"\r\n    },\r\n    {\r\n    Country: \"Mauritius\",\r\n    Slug: \"mauritius\",\r\n    ISO2: \"MU\"\r\n    },\r\n    {\r\n    Country: \"Mayotte\",\r\n    Slug: \"mayotte\",\r\n    ISO2: \"YT\"\r\n    },\r\n    {\r\n    Country: \"Wallis and Futuna Islands\",\r\n    Slug: \"wallis-and-futuna-islands\",\r\n    ISO2: \"WF\"\r\n    },\r\n    {\r\n    Country: \"Denmark\",\r\n    Slug: \"denmark\",\r\n    ISO2: \"DK\"\r\n    },\r\n    {\r\n    Country: \"Malaysia\",\r\n    Slug: \"malaysia\",\r\n    ISO2: \"MY\"\r\n    },\r\n    {\r\n    Country: \"Paraguay\",\r\n    Slug: \"paraguay\",\r\n    ISO2: \"PY\"\r\n    },\r\n    {\r\n    Country: \"Uganda\",\r\n    Slug: \"uganda\",\r\n    ISO2: \"UG\"\r\n    },\r\n    {\r\n    Country: \"Cape Verde\",\r\n    Slug: \"cape-verde\",\r\n    ISO2: \"CV\"\r\n    },\r\n    {\r\n    Country: \"Indonesia\",\r\n    Slug: \"indonesia\",\r\n    ISO2: \"ID\"\r\n    },\r\n    {\r\n    Country: \"Syrian Arab Republic (Syria)\",\r\n    Slug: \"syria\",\r\n    ISO2: \"SY\"\r\n    },\r\n    {\r\n    Country: \"Belgium\",\r\n    Slug: \"belgium\",\r\n    ISO2: \"BE\"\r\n    },\r\n    {\r\n    Country: \"Bulgaria\",\r\n    Slug: \"bulgaria\",\r\n    ISO2: \"BG\"\r\n    },\r\n    {\r\n    Country: \"Norfolk Island\",\r\n    Slug: \"norfolk-island\",\r\n    ISO2: \"NF\"\r\n    },\r\n    {\r\n    Country: \"Oman\",\r\n    Slug: \"oman\",\r\n    ISO2: \"OM\"\r\n    },\r\n    {\r\n    Country: \"Saint Pierre and Miquelon\",\r\n    Slug: \"saint-pierre-and-miquelon\",\r\n    ISO2: \"PM\"\r\n    },\r\n    {\r\n    Country: \"Chad\",\r\n    Slug: \"chad\",\r\n    ISO2: \"TD\"\r\n    },\r\n    {\r\n    Country: \"Sao Tome and Principe\",\r\n    Slug: \"sao-tome-and-principe\",\r\n    ISO2: \"ST\"\r\n    },\r\n    {\r\n    Country: \"Guernsey\",\r\n    Slug: \"guernsey\",\r\n    ISO2: \"GG\"\r\n    },\r\n    {\r\n    Country: \"Virgin Islands, US\",\r\n    Slug: \"virgin-islands\",\r\n    ISO2: \"VI\"\r\n    },\r\n    {\r\n    Country: \"Jamaica\",\r\n    Slug: \"jamaica\",\r\n    ISO2: \"JM\"\r\n    },\r\n    {\r\n    Country: \"Namibia\",\r\n    Slug: \"namibia\",\r\n    ISO2: \"NA\"\r\n    },\r\n    {\r\n    Country: \"Netherlands Antilles\",\r\n    Slug: \"netherlands-antilles\",\r\n    ISO2: \"AN\"\r\n    },\r\n    {\r\n    Country: \"South Africa\",\r\n    Slug: \"south-africa\",\r\n    ISO2: \"ZA\"\r\n    },\r\n    {\r\n    Country: \"Bouvet Island\",\r\n    Slug: \"bouvet-island\",\r\n    ISO2: \"BV\"\r\n    },\r\n    {\r\n    Country: \"Madagascar\",\r\n    Slug: \"madagascar\",\r\n    ISO2: \"MG\"\r\n    },\r\n    {\r\n    Country: \"Vanuatu\",\r\n    Slug: \"vanuatu\",\r\n    ISO2: \"VU\"\r\n    },\r\n    {\r\n    Country: \"Antigua and Barbuda\",\r\n    Slug: \"antigua-and-barbuda\",\r\n    ISO2: \"AG\"\r\n    },\r\n    {\r\n    Country: \"Slovakia\",\r\n    Slug: \"slovakia\",\r\n    ISO2: \"SK\"\r\n    },\r\n    {\r\n    Country: \"Albania\",\r\n    Slug: \"albania\",\r\n    ISO2: \"AL\"\r\n    },\r\n    {\r\n    Country: \"Australia\",\r\n    Slug: \"australia\",\r\n    ISO2: \"AU\"\r\n    },\r\n    {\r\n    Country: \"Niue\",\r\n    Slug: \"niue\",\r\n    ISO2: \"NU\"\r\n    },\r\n    {\r\n    Country: \"Botswana\",\r\n    Slug: \"botswana\",\r\n    ISO2: \"BW\"\r\n    },\r\n    {\r\n    Country: \"Timor-Leste\",\r\n    Slug: \"timor-leste\",\r\n    ISO2: \"TL\"\r\n    },\r\n    {\r\n    Country: \"Colombia\",\r\n    Slug: \"colombia\",\r\n    ISO2: \"CO\"\r\n    },\r\n    {\r\n    Country: \"Congo (Kinshasa)\",\r\n    Slug: \"congo-kinshasa\",\r\n    ISO2: \"CD\"\r\n    },\r\n    {\r\n    Country: \"Cyprus\",\r\n    Slug: \"cyprus\",\r\n    ISO2: \"CY\"\r\n    },\r\n    {\r\n    Country: \"Turks and Caicos Islands\",\r\n    Slug: \"turks-and-caicos-islands\",\r\n    ISO2: \"TC\"\r\n    },\r\n    {\r\n    Country: \"Burkina Faso\",\r\n    Slug: \"burkina-faso\",\r\n    ISO2: \"BF\"\r\n    },\r\n    {\r\n    Country: \"Lebanon\",\r\n    Slug: \"lebanon\",\r\n    ISO2: \"LB\"\r\n    },\r\n    {\r\n    Country: \"Russian Federation\",\r\n    Slug: \"russia\",\r\n    ISO2: \"RU\"\r\n    },\r\n    {\r\n    Country: \"Réunion\",\r\n    Slug: \"réunion\",\r\n    ISO2: \"RE\"\r\n    },\r\n    {\r\n    Country: \"Svalbard and Jan Mayen Islands\",\r\n    Slug: \"svalbard-and-jan-mayen-islands\",\r\n    ISO2: \"SJ\"\r\n    },\r\n    {\r\n    Country: \"Venezuela (Bolivarian Republic)\",\r\n    Slug: \"venezuela\",\r\n    ISO2: \"VE\"\r\n    },\r\n    {\r\n    Country: \"Christmas Island\",\r\n    Slug: \"christmas-island\",\r\n    ISO2: \"CX\"\r\n    },\r\n    {\r\n    Country: \"Falkland Islands (Malvinas)\",\r\n    Slug: \"falkland-islands-malvinas\",\r\n    ISO2: \"FK\"\r\n    },\r\n    {\r\n    Country: \"Azerbaijan\",\r\n    Slug: \"azerbaijan\",\r\n    ISO2: \"AZ\"\r\n    },\r\n    {\r\n    Country: \"Brazil\",\r\n    Slug: \"brazil\",\r\n    ISO2: \"BR\"\r\n    },\r\n    {\r\n    Country: \"Cameroon\",\r\n    Slug: \"cameroon\",\r\n    ISO2: \"CM\"\r\n    },\r\n    {\r\n    Country: \"Cayman Islands\",\r\n    Slug: \"cayman-islands\",\r\n    ISO2: \"KY\"\r\n    },\r\n    {\r\n    Country: \"India\",\r\n    Slug: \"india\",\r\n    ISO2: \"IN\"\r\n    },\r\n    {\r\n    Country: \"Luxembourg\",\r\n    Slug: \"luxembourg\",\r\n    ISO2: \"LU\"\r\n    },\r\n    {\r\n    Country: \"Marshall Islands\",\r\n    Slug: \"marshall-islands\",\r\n    ISO2: \"MH\"\r\n    },\r\n    {\r\n    Country: \"Nauru\",\r\n    Slug: \"nauru\",\r\n    ISO2: \"NR\"\r\n    },\r\n    {\r\n    Country: \"US Minor Outlying Islands\",\r\n    Slug: \"us-minor-outlying-islands\",\r\n    ISO2: \"UM\"\r\n    },\r\n    {\r\n    Country: \"Korea (South)\",\r\n    Slug: \"korea-south\",\r\n    ISO2: \"KR\"\r\n    },\r\n    {\r\n    Country: \"Equatorial Guinea\",\r\n    Slug: \"equatorial-guinea\",\r\n    ISO2: \"GQ\"\r\n    },\r\n    {\r\n    Country: \"Honduras\",\r\n    Slug: \"honduras\",\r\n    ISO2: \"HN\"\r\n    },\r\n    {\r\n    Country: \"Italy\",\r\n    Slug: \"italy\",\r\n    ISO2: \"IT\"\r\n    },\r\n    {\r\n    Country: \"Republic of Kosovo\",\r\n    Slug: \"kosovo\",\r\n    ISO2: \"XK\"\r\n    },\r\n    {\r\n    Country: \"Belarus\",\r\n    Slug: \"belarus\",\r\n    ISO2: \"BY\"\r\n    },\r\n    {\r\n    Country: \"Puerto Rico\",\r\n    Slug: \"puerto-rico\",\r\n    ISO2: \"PR\"\r\n    },\r\n    {\r\n    Country: \"Qatar\",\r\n    Slug: \"qatar\",\r\n    ISO2: \"QA\"\r\n    },\r\n    {\r\n    Country: \"Romania\",\r\n    Slug: \"romania\",\r\n    ISO2: \"RO\"\r\n    },\r\n    {\r\n    Country: \"Bhutan\",\r\n    Slug: \"bhutan\",\r\n    ISO2: \"BT\"\r\n    },\r\n    {\r\n    Country: \"Lithuania\",\r\n    Slug: \"lithuania\",\r\n    ISO2: \"LT\"\r\n    },\r\n    {\r\n    Country: \"Solomon Islands\",\r\n    Slug: \"solomon-islands\",\r\n    ISO2: \"SB\"\r\n    },\r\n    {\r\n    Country: \"Palestinian Territory\",\r\n    Slug: \"palestine\",\r\n    ISO2: \"PS\"\r\n    },\r\n    {\r\n    Country: \"Singapore\",\r\n    Slug: \"singapore\",\r\n    ISO2: \"SG\"\r\n    },\r\n    {\r\n    Country: \"Malawi\",\r\n    Slug: \"malawi\",\r\n    ISO2: \"MW\"\r\n    },\r\n    {\r\n    Country: \"Saint Helena\",\r\n    Slug: \"saint-helena\",\r\n    ISO2: \"SH\"\r\n    },\r\n    {\r\n    Country: \"Argentina\",\r\n    Slug: \"argentina\",\r\n    ISO2: \"AR\"\r\n    },\r\n    {\r\n    Country: \"Burundi\",\r\n    Slug: \"burundi\",\r\n    ISO2: \"BI\"\r\n    },\r\n    {\r\n    Country: \"Spain\",\r\n    Slug: \"spain\",\r\n    ISO2: \"ES\"\r\n    },\r\n    {\r\n    Country: \"Zimbabwe\",\r\n    Slug: \"zimbabwe\",\r\n    ISO2: \"ZW\"\r\n    },\r\n    {\r\n    Country: \"Aruba\",\r\n    Slug: \"aruba\",\r\n    ISO2: \"AW\"\r\n    },\r\n    {\r\n    Country: \"Macao, SAR China\",\r\n    Slug: \"macao-sar-china\",\r\n    ISO2: \"MO\"\r\n    },\r\n    {\r\n    Country: \"Saint-Barthélemy\",\r\n    Slug: \"saint-barthélemy\",\r\n    ISO2: \"BL\"\r\n    },\r\n    {\r\n    Country: \"Congo (Brazzaville)\",\r\n    Slug: \"congo-brazzaville\",\r\n    ISO2: \"CG\"\r\n    },\r\n    {\r\n    Country: \"Slovenia\",\r\n    Slug: \"slovenia\",\r\n    ISO2: \"SI\"\r\n    },\r\n    {\r\n    Country: \"United Arab Emirates\",\r\n    Slug: \"united-arab-emirates\",\r\n    ISO2: \"AE\"\r\n    },\r\n    {\r\n    Country: \"Anguilla\",\r\n    Slug: \"anguilla\",\r\n    ISO2: \"AI\"\r\n    },\r\n    {\r\n    Country: \"Cuba\",\r\n    Slug: \"cuba\",\r\n    ISO2: \"CU\"\r\n    },\r\n    {\r\n    Country: \"Côte d'Ivoire\",\r\n    Slug: \"cote-divoire\",\r\n    ISO2: \"CI\"\r\n    },\r\n    {\r\n    Country: \"Hungary\",\r\n    Slug: \"hungary\",\r\n    ISO2: \"HU\"\r\n    },\r\n    {\r\n    Country: \"United States of America\",\r\n    Slug: \"united-states\",\r\n    ISO2: \"US\"\r\n    },\r\n    {\r\n    Country: \"Uzbekistan\",\r\n    Slug: \"uzbekistan\",\r\n    ISO2: \"UZ\"\r\n    },\r\n    {\r\n    Country: \"Canada\",\r\n    Slug: \"canada\",\r\n    ISO2: \"CA\"\r\n    },\r\n    {\r\n    Country: \"Georgia\",\r\n    Slug: \"georgia\",\r\n    ISO2: \"GE\"\r\n    },\r\n    {\r\n    Country: \"Kenya\",\r\n    Slug: \"kenya\",\r\n    ISO2: \"KE\"\r\n    },\r\n    {\r\n    Country: \"Martinique\",\r\n    Slug: \"martinique\",\r\n    ISO2: \"MQ\"\r\n    },\r\n    {\r\n    Country: \"Moldova\",\r\n    Slug: \"moldova\",\r\n    ISO2: \"MD\"\r\n    },\r\n    {\r\n    Country: \"Swaziland\",\r\n    Slug: \"swaziland\",\r\n    ISO2: \"SZ\"\r\n    },\r\n    {\r\n    Country: \"Heard and Mcdonald Islands\",\r\n    Slug: \"heard-and-mcdonald-islands\",\r\n    ISO2: \"HM\"\r\n    },\r\n    {\r\n    Country: \"Norway\",\r\n    Slug: \"norway\",\r\n    ISO2: \"NO\"\r\n    },\r\n    {\r\n    Country: \"South Sudan\",\r\n    Slug: \"south-sudan\",\r\n    ISO2: \"SS\"\r\n    },\r\n    {\r\n    Country: \"Tonga\",\r\n    Slug: \"tonga\",\r\n    ISO2: \"TO\"\r\n    },\r\n    {\r\n    Country: \"Tunisia\",\r\n    Slug: \"tunisia\",\r\n    ISO2: \"TN\"\r\n    },\r\n    {\r\n    Country: \"Macedonia, Republic of\",\r\n    Slug: \"macedonia\",\r\n    ISO2: \"MK\"\r\n    },\r\n    {\r\n    Country: \"Monaco\",\r\n    Slug: \"monaco\",\r\n    ISO2: \"MC\"\r\n    },\r\n    {\r\n    Country: \"Taiwan, Republic of China\",\r\n    Slug: \"taiwan\",\r\n    ISO2: \"TW\"\r\n    },\r\n    {\r\n    Country: \"Ukraine\",\r\n    Slug: \"ukraine\",\r\n    ISO2: \"UA\"\r\n    },\r\n    {\r\n    Country: \"Montenegro\",\r\n    Slug: \"montenegro\",\r\n    ISO2: \"ME\"\r\n    },\r\n    {\r\n    Country: \"Pakistan\",\r\n    Slug: \"pakistan\",\r\n    ISO2: \"PK\"\r\n    },\r\n    {\r\n    Country: \"Palau\",\r\n    Slug: \"palau\",\r\n    ISO2: \"PW\"\r\n    },\r\n    {\r\n    Country: \"British Indian Ocean Territory\",\r\n    Slug: \"british-indian-ocean-territory\",\r\n    ISO2: \"IO\"\r\n    },\r\n    {\r\n    Country: \"Cambodia\",\r\n    Slug: \"cambodia\",\r\n    ISO2: \"KH\"\r\n    },\r\n    {\r\n    Country: \"French Southern Territories\",\r\n    Slug: \"french-southern-territories\",\r\n    ISO2: \"TF\"\r\n    },\r\n    {\r\n    Country: \"Dominica\",\r\n    Slug: \"dominica\",\r\n    ISO2: \"DM\"\r\n    },\r\n    {\r\n    Country: \"Ethiopia\",\r\n    Slug: \"ethiopia\",\r\n    ISO2: \"ET\"\r\n    },\r\n    {\r\n    Country: \"Gabon\",\r\n    Slug: \"gabon\",\r\n    ISO2: \"GA\"\r\n    },\r\n    {\r\n    Country: \"Iran, Islamic Republic of\",\r\n    Slug: \"iran\",\r\n    ISO2: \"IR\"\r\n    },\r\n    {\r\n    Country: \"Mauritania\",\r\n    Slug: \"mauritania\",\r\n    ISO2: \"MR\"\r\n    },\r\n    {\r\n    Country: \"Switzerland\",\r\n    Slug: \"switzerland\",\r\n    ISO2: \"CH\"\r\n    },\r\n    {\r\n    Country: \"Zambia\",\r\n    Slug: \"zambia\",\r\n    ISO2: \"ZM\"\r\n    },\r\n    {\r\n    Country: \"Djibouti\",\r\n    Slug: \"djibouti\",\r\n    ISO2: \"DJ\"\r\n    },\r\n    {\r\n    Country: \"Holy See (Vatican City State)\",\r\n    Slug: \"holy-see-vatican-city-state\",\r\n    ISO2: \"VA\"\r\n    },\r\n    {\r\n    Country: \"Jordan\",\r\n    Slug: \"jordan\",\r\n    ISO2: \"JO\"\r\n    },\r\n    {\r\n    Country: \"Mozambique\",\r\n    Slug: \"mozambique\",\r\n    ISO2: \"MZ\"\r\n    },\r\n    {\r\n    Country: \"Panama\",\r\n    Slug: \"panama\",\r\n    ISO2: \"PA\"\r\n    },\r\n    {\r\n    Country: \"Sweden\",\r\n    Slug: \"sweden\",\r\n    ISO2: \"SE\"\r\n    },\r\n    {\r\n    Country: \"Cocos (Keeling) Islands\",\r\n    Slug: \"cocos-keeling-islands\",\r\n    ISO2: \"CC\"\r\n    },\r\n    {\r\n    Country: \"Ghana\",\r\n    Slug: \"ghana\",\r\n    ISO2: \"GH\"\r\n    },\r\n    {\r\n    Country: \"Latvia\",\r\n    Slug: \"latvia\",\r\n    ISO2: \"LV\"\r\n    },\r\n    {\r\n    Country: \"Micronesia, Federated States of\",\r\n    Slug: \"micronesia\",\r\n    ISO2: \"FM\"\r\n    },\r\n    {\r\n    Country: \"Bangladesh\",\r\n    Slug: \"bangladesh\",\r\n    ISO2: \"BD\"\r\n    },\r\n    {\r\n    Country: \"Egypt\",\r\n    Slug: \"egypt\",\r\n    ISO2: \"EG\"\r\n    },\r\n    {\r\n    Country: \"Saint Vincent and Grenadines\",\r\n    Slug: \"saint-vincent-and-the-grenadines\",\r\n    ISO2: \"VC\"\r\n    },\r\n    {\r\n    Country: \"Togo\",\r\n    Slug: \"togo\",\r\n    ISO2: \"TG\"\r\n    },\r\n    {\r\n    Country: \"Costa Rica\",\r\n    Slug: \"costa-rica\",\r\n    ISO2: \"CR\"\r\n    },\r\n    {\r\n    Country: \"Germany\",\r\n    Slug: \"germany\",\r\n    ISO2: \"DE\"\r\n    },\r\n    {\r\n    Country: \"Viet Nam\",\r\n    Slug: \"vietnam\",\r\n    ISO2: \"VN\"\r\n    },\r\n    {\r\n    Country: \"Yemen\",\r\n    Slug: \"yemen\",\r\n    ISO2: \"YE\"\r\n    },\r\n    {\r\n    Country: \"New Caledonia\",\r\n    Slug: \"new-caledonia\",\r\n    ISO2: \"NC\"\r\n    },\r\n    {\r\n    Country: \"New Zealand\",\r\n    Slug: \"new-zealand\",\r\n    ISO2: \"NZ\"\r\n    },\r\n    {\r\n    Country: \"Armenia\",\r\n    Slug: \"armenia\",\r\n    ISO2: \"AM\"\r\n    },\r\n    {\r\n    Country: \"Czech Republic\",\r\n    Slug: \"czech-republic\",\r\n    ISO2: \"CZ\"\r\n    },\r\n    {\r\n    Country: \"Guinea\",\r\n    Slug: \"guinea\",\r\n    ISO2: \"GN\"\r\n    },\r\n    {\r\n    Country: \"Hong Kong, SAR China\",\r\n    Slug: \"hong-kong-sar-china\",\r\n    ISO2: \"HK\"\r\n    },\r\n    {\r\n    Country: \"Jersey\",\r\n    Slug: \"jersey\",\r\n    ISO2: \"JE\"\r\n    },\r\n    {\r\n    Country: \"Mongolia\",\r\n    Slug: \"mongolia\",\r\n    ISO2: \"MN\"\r\n    },\r\n    {\r\n    Country: \"Senegal\",\r\n    Slug: \"senegal\",\r\n    ISO2: \"SN\"\r\n    },\r\n    {\r\n    Country: \"United Kingdom\",\r\n    Slug: \"united-kingdom\",\r\n    ISO2: \"GB\"\r\n    },\r\n    {\r\n    Country: \"Sierra Leone\",\r\n    Slug: \"sierra-leone\",\r\n    ISO2: \"SL\"\r\n    },\r\n    {\r\n    Country: \"Bahrain\",\r\n    Slug: \"bahrain\",\r\n    ISO2: \"BH\"\r\n    },\r\n    {\r\n    Country: \"Chile\",\r\n    Slug: \"chile\",\r\n    ISO2: \"CL\"\r\n    },\r\n    {\r\n    Country: \"Eritrea\",\r\n    Slug: \"eritrea\",\r\n    ISO2: \"ER\"\r\n    },\r\n    {\r\n    Country: \"Iraq\",\r\n    Slug: \"iraq\",\r\n    ISO2: \"IQ\"\r\n    },\r\n    {\r\n    Country: \"French Guiana\",\r\n    Slug: \"french-guiana\",\r\n    ISO2: \"GF\"\r\n    },\r\n    {\r\n    Country: \"Malta\",\r\n    Slug: \"malta\",\r\n    ISO2: \"MT\"\r\n    },\r\n    {\r\n    Country: \"Montserrat\",\r\n    Slug: \"montserrat\",\r\n    ISO2: \"MS\"\r\n    },\r\n    {\r\n    Country: \"San Marino\",\r\n    Slug: \"san-marino\",\r\n    ISO2: \"SM\"\r\n    },\r\n    {\r\n    Country: \"Thailand\",\r\n    Slug: \"thailand\",\r\n    ISO2: \"TH\"\r\n    }\r\n]\r\n\r\nexport default allCountries;","import React, { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport allCountries from '../../assets/allCountries'\r\n\r\nimport './styles.css';\r\n\r\nexport default function Header({ history }) {\r\n\r\n    const [country, setCountry] = useState('');\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <h1>Covid-19 Tracker | #FicaEmCasa</h1>\r\n\r\n            <Autocomplete\r\n                id=\"size-small-outlined\"\r\n                size=\"small\"\r\n                options={allCountries}\r\n                getOptionLabel={(option) => option.Country}\r\n                style={{ width: 300, marginLeft: 50 }}\r\n                renderInput={(params) => <TextField {...params} label=\"Filtrar por região\" variant=\"outlined\" />}\r\n                onChange={(event, value) => {\r\n                    if (value) return setCountry(value.Slug)\r\n                }}\r\n            />\r\n            <Link to={`/covid19-tracker/${country}`} > <button type=\"submit\" className=\"btn\">Search</button> </Link>\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport apiCovid from '../../services/api';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport arrowUp from '../../assets/arrow-up.svg'\r\nimport arrowDown from '../../assets/arrow-down.svg'\r\nimport './styles.css';\r\n\r\nexport default function Header(props) {\r\n    const [regions, setRegions] = useState([]);\r\n\r\n    const [sort, setSort] = useState('confirmed'); // Sort variable; Confirmed cases by default\r\n    const [arrowRot, setArrowRot] = useState(false);\r\n    \r\n    /**\r\n     * GET GLOBAL SUMMARY\r\n     */\r\n    useEffect(() => {\r\n        async function loadGlobalRanking() {\r\n            const response = await apiCovid.get('/summary')\r\n            \r\n            setRegions(response.data.Countries)\r\n        }\r\n        loadGlobalRanking();\r\n    }, [sort]);\r\n\r\n    function handleSort(choice) {\r\n        if (sort===choice&&sort!=='') {\r\n            setSort(choice + \"r\")\r\n            setArrowRot(true)\r\n        } else {\r\n            setSort(choice)\r\n            setArrowRot(false)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * RENDER\r\n     */\r\n    return (\r\n        <div className={\"ranking\" + props.page}>\r\n            <h1>Global Ranking</h1>\r\n\r\n            <div>\r\n                <table>\r\n                    <tr>\r\n                        <th><button onClick={() => handleSort('')} >Region <img alt=\"\" src={(sort==='') ? arrowRot : \"\" } /> </button></th>\r\n                        <th><button onClick={() => handleSort('confirmed')} >Confirmed <img alt=\"\" src={(sort==='confirmed') ? ((arrowRot) ? \"\" : arrowDown) : ((sort==='confirmedr') ? (arrowRot) ? arrowUp : \"\" : \"\")} /> </button></th>\r\n                        <th><button onClick={() => handleSort('recovered')} >Recovered <img alt=\"\" src={(sort==='recovered') ? ((arrowRot) ? \"\" : arrowDown) : ((sort==='recoveredr') ? (arrowRot) ? arrowUp : \"\" : \"\")} /> </button></th>\r\n                        <th><button onClick={() => handleSort('fatal')} >Fatal <img alt=\"\" src={(sort==='fatal') ? ((arrowRot) ? \"\" : arrowDown) : ((sort==='fatalr') ? (arrowRot) ? arrowUp : \"\" : \"\")} /> </button></th>\r\n                    </tr>\r\n                    {regions\r\n                      /*.filter(region => region.TotalConfirmed>0) // Render only if there are at least 1 case confirmed\r\n                        .sort(function(a, b) { // Sort according to the user's choice\r\n                            switch (sort) {\r\n                                case 'confirmed': return b.TotalConfirmed-a.TotalConfirmed\r\n                                case 'confirmedr': return a.TotalConfirmed-b.TotalConfirmed\r\n                                case 'recovered': return b.TotalRecovered-a.TotalRecovered\r\n                                case 'recoveredr': return a.TotalRecovered-b.TotalRecovered\r\n                                case 'fatal': return b.TotalDeaths-a.TotalDeaths\r\n                                case 'fatalr': return a.TotalDeaths-b.TotalDeaths\r\n                                default:\r\n                                    return '';\r\n                            }\r\n                        }) */\r\n                        .map(region => ( // Maps\r\n                            <tr className=\"item\" key={region.Country} >\r\n                                <td>{region.Country}</td>\r\n                                <td style={{ color: \"#a83f2f\" }} >{region.TotalConfirmed}</td>\r\n                                <td style={{ color: \"#45a82f\" }} >{region.TotalRecovered}</td>\r\n                                <td style={{ color: \"#333\" }} >{region.TotalDeaths}</td>\r\n                                {console.log(region.Country + \", \" + region.TotalConfirmed + \", \" + region.TotalRecovered + \", \" + region.TotalDeaths)}\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\nimport './styles.css';\r\n\r\nconst options = {\r\n\tlegend: {\r\n\t\tdisplay: true,\r\n\t\tposition: 'bottom'\r\n\t}\r\n}\r\n\r\nexport default class Chart extends Component {\r\n  render() {\r\n    return (\r\n      <div className={\"statsChart\" + this.props.page} >\r\n        <h1>{this.props.title + \" Statistics (%)\" }</h1>\r\n\t\t<Doughnut width={100} height={77} \r\n\t\t\tdata={{\r\n\t\t\t\tlabels: [\r\n\t\t\t\t\t'Active',\r\n\t\t\t\t\t'Recovered',\r\n\t\t\t\t\t'Fatal'\r\n\t\t\t\t],\r\n\t\t\t\tdatasets: [{\r\n\t\t\t\t\tdata: [this.props.activeStats , this.props.recoveredStats, this.props.fatalStats],\r\n\t\t\t\t\tbackgroundColor: [\r\n\t\t\t\t\t\t'#eb6363',\r\n\t\t\t\t\t\t'#8aeb63',\r\n\t\t\t\t\t\t'#757575'\r\n\t\t\t\t\t],\r\n\t\t\t\t\thoverBackgroundColor: [\r\n\t\t\t\t\t\t'#eb6363',\r\n\t\t\t\t\t\t'#8aeb63',\r\n\t\t\t\t\t\t'#757575'\r\n\t\t\t\t\t]\r\n\t\t\t\t}]\r\n\t\t\t}} \r\n\t\toptions={options} />\r\n      </div>\r\n    );\r\n  }\r\n};","import React, { useEffect, useState } from 'react';\r\nimport apiCovid from '../../services/api';\r\n\r\nimport Header from '../../components/Header/Header'\r\nimport Ranking from '../../components/Ranking/Ranking'\r\nimport StatsChart from '../../components/StatsChart/StatsChart'\r\n\r\nimport './styles.css';\r\n\r\nexport default function Main() {\r\n    const [summary, setSummary] = useState([]);\r\n    \r\n    /**\r\n     * GET GLOBAL SUMMARY\r\n     */\r\n    useEffect(() =>{\r\n        async function loadGlobalSummary() {\r\n            const response = await apiCovid.get('/summary')\r\n            \r\n            setSummary(response.data.Global)\r\n        }\r\n        loadGlobalSummary();\r\n    }, []);\r\n    \r\n    let nowActive = summary.TotalConfirmed - summary.TotalDeaths - summary.TotalRecovered;\r\n    let activeStats = (nowActive*100)/summary.TotalConfirmed;\r\n    let recoveredStats = (summary.TotalRecovered*100)/summary.TotalConfirmed;\r\n    let fatalStats = (summary.TotalDeaths*100)/summary.TotalConfirmed;\r\n\r\n    /**\r\n     * RENDER\r\n     */\r\n    return (\r\n        <>\r\n        <Header />\r\n        <div className=\"dashboardGlobal\">\r\n            <div className=\"globalSummary\">\r\n                <h1>Global Summary</h1>\r\n                <strong>Total Confirmed Cases</strong> <p> {summary.TotalConfirmed} </p>\r\n                <div className=\"globalDetails\">\r\n                    <li>\r\n                        <p className=\"new\" > + {summary.NewConfirmed} </p>\r\n                        <p className=\"dataGlobal\" > {nowActive} </p>\r\n                        <p> <strong>Active Cases</strong> </p>\r\n                    </li>\r\n                    <li>\r\n                        <p className=\"new\" > + {summary.NewRecovered} </p>\r\n                        <p className=\"dataGlobal\" > {summary.TotalRecovered} </p> \r\n                        <p> <strong>Recovered Cases</strong> </p>\r\n                    </li>\r\n                    <li>\r\n                        <p className=\"new\" > + {summary.NewDeaths} </p>\r\n                        <p className=\"dataGlobal\" > {summary.TotalDeaths} </p> \r\n                        <p> <strong>Fatal Cases</strong> </p>\r\n                    </li>\r\n                </div>\r\n\r\n            </div>\r\n            <Ranking page={\"Main\"} />\r\n\r\n            <StatsChart title={\"Global\"} page={\"Main\"} activeStats={activeStats.toFixed(2)} recoveredStats={recoveredStats.toFixed(2)} fatalStats={fatalStats.toFixed(2)} />\r\n        </div>\r\n        </>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nexport default class Chart extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"virusSpreadChart\">\r\n        <h1>Gráfico de Propagação</h1>\r\n        <Line\r\n          data={{\r\n            labels: this.props.labelDate,\r\n            datasets: [\r\n              {\r\n                label: 'Confirmados',\r\n                fill: false,\r\n                backgroundColor: 'rgba(255, 255, 255, 1)',\r\n                borderColor: 'rgba(227, 34, 34,1)',\r\n                borderWidth: 1,\r\n                hoverBackgroundColor: 'rgba(227, 34, 34,1)',\r\n                hoverBorderColor: 'rgba(227, 34, 34,1)',\r\n                data: this.props.confirmedData\r\n              },\r\n              {\r\n                label: 'Fatais',\r\n                fill: false,\r\n                backgroundColor: 'rgba(255, 255, 255, 1)',\r\n                borderColor: 'rgba(55,55,55,1)',\r\n                borderWidth: 1,\r\n                hoverBackgroundColor: 'rgba(75,75,75,1)',\r\n                hoverBorderColor: 'rgba(75,75,75,1)',\r\n                data: this.props.fatalData\r\n              }\r\n            ]\r\n          }}\r\n          width={100}\r\n          height={33}\r\n          options={\r\n            { \r\n              maintainAspectRatio: true,\r\n              legend: {\r\n                position: 'top',\r\n                labels: {\r\n                  usePointStyle: true,\r\n                  boxWidth: 5\r\n                }              \r\n              },\r\n              tooltips: {\r\n                legendColorBackground: 'rgba(75,75,75,1)',\r\n                mode: 'index',\r\n                intersect: false\r\n              },\r\n              hover: {\r\n                mode: 'index',\r\n                intersect: false\r\n              }\r\n            }\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n};","import React, { Component } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nexport default class Chart extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"nowActiveChart\">\r\n        <h1>Casos Ativos Simultâneos</h1>\r\n        <Line\r\n          data={{\r\n            labels: this.props.labelDate,\r\n            datasets: [\r\n              {\r\n                label: 'Número de Casos Ativos',\r\n                fill: false,\r\n                backgroundColor: 'rgba(255, 255, 255, 1)',\r\n                borderColor: 'rgba(209, 148, 25,1)',\r\n                borderWidth: 1,\r\n                hoverBackgroundColor: 'rgba(209, 148, 25,1)',\r\n                hoverBorderColor: 'rgba(209, 148, 25,1)',\r\n                data: this.props.activeData\r\n              }\r\n            ]\r\n          }}\r\n          width={100}\r\n          height={33}\r\n          options={\r\n            { \r\n              maintainAspectRatio: true,\r\n              legend: {\r\n                position: 'top',\r\n                labels: {\r\n                  usePointStyle: true,\r\n                  boxWidth: 5\r\n                }              \r\n              },\r\n              tooltips: {\r\n                legendColorBackground: 'rgba(75,75,75,1)',\r\n                mode: 'index',\r\n                intersect: false\r\n              },\r\n              hover: {\r\n                mode: 'index',\r\n                intersect: false\r\n              }\r\n            }\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n};","import React, { Component } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nexport default class Chart extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"nowActiveChart\">\r\n        <h1>Daily Cases</h1>\r\n        <Bar\r\n          data={{\r\n            labels: this.props.labelDate,\r\n            datasets: [\r\n              {\r\n                label: 'Recovered',\r\n                fill: false,\r\n                backgroundColor: '#8aeb63',\r\n                borderColor: '#8aeb63',\r\n                borderWidth: 1,\r\n                hoverBackgroundColor: '#8aeb63',\r\n                hoverBorderColor: '#8aeb63',\r\n                data: this.props.recovered\r\n              },\r\n              {\r\n                label: 'Fatal',\r\n                fill: false,\r\n                backgroundColor: '#757575',\r\n                borderColor: '#757575',\r\n                borderWidth: 1,\r\n                hoverBackgroundColor: '#757575',\r\n                hoverBorderColor: '#757575',\r\n                data: this.props.fatal\r\n              }\r\n            ]\r\n          }}\r\n          width={100}\r\n          height={33}\r\n          options={\r\n            { \r\n              maintainAspectRatio: true,\r\n              legend: {\r\n                position: 'top',\r\n                labels: {\r\n                  usePointStyle: true,\r\n                  boxWidth: 5\r\n                }              \r\n              },\r\n              tooltips: {\r\n                legendColorBackground: 'rgba(75,75,75,1)',\r\n                mode: 'index',\r\n                intersect: false\r\n              },\r\n              hover: {\r\n                mode: 'index',\r\n                intersect: false\r\n              }\r\n            }\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n};","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport apiCovid from '../../services/api';\r\n\r\nimport Header from '../../components/Header/Header'\r\nimport Ranking from '../../components/Ranking/Ranking'\r\n\r\nimport Propragacao from '../../components/Propragacao'\r\nimport NowActive from '../../components/NowActive'\r\nimport StatsChart from '../../components/StatsChart/StatsChart'\r\nimport DailyData from '../../components/DailyData'\r\n\r\nimport './styles.css';\r\n\r\nexport default function Main() {\r\n    const [summary, setSummary] = useState([]);\r\n    const [previousSummary, setPreviousSummary] = useState([]);\r\n\r\n    /**\r\n     * CHARTS DATA\r\n     */\r\n    const [date, setDate] = useState([]);\r\n    const [confirmed, setConfirmed] = useState([]);\r\n    const [fatal, setFatal] = useState([]);\r\n    const [activeChart, setActiveChart] = useState([]);\r\n\r\n    const [dailyRecovered, setDailyRecovered] = useState([]);\r\n    const [dailyFatal, setDailyFatal] = useState([]);\r\n    \r\n    const { country } = useParams();\r\n\r\n    useEffect(() =>{\r\n        /**\r\n         * GET SUMMARY\r\n         */\r\n        async function loadCountrySummary() {\r\n            const response = await apiCovid.get(`/total/country/${country}`)\r\n\r\n            // Checks if the last report is actualy valid\r\n            const lastRep = (response.data[response.data.length-1].Confirmed!==0) ? 1 : 2;\r\n\r\n            setSummary(response.data[response.data.length-lastRep])\r\n            setPreviousSummary(response.data[(response.data.length-lastRep)-1])\r\n        }\r\n\r\n        /**\r\n         * GET TOTAL DATA\r\n         */\r\n        async function loadCountryTotalData() {\r\n            const response = await apiCovid.get(`/total/country/${country}`)\r\n            \r\n            const labelDate = []\r\n            const confirmedData = []\r\n            const fatalData = []\r\n            const activeChartData = []\r\n\r\n            const dailyRecoveredData = []\r\n            const dailyFatalData = []\r\n\r\n            for (let i=0; i<response.data.length; i+=5) {\r\n                // Ignores if there are 0 cases confirmed\r\n                if (response.data[i].Confirmed!==0) {\r\n                    // Spread Chart\r\n                    labelDate.push(response.data[i].Date.slice(0, 10));\r\n                    confirmedData.push(response.data[i].Confirmed);\r\n                    fatalData.push(response.data[i].Deaths);\r\n                    \r\n                    // Now Active Chart\r\n                    activeChartData.push(response.data[i].Confirmed-response.data[i].Recovered-response.data[i].Deaths);\r\n\r\n                    // Daily Data Chart\r\n                    dailyRecoveredData.push(response.data[i].Recovered);\r\n                    dailyFatalData.push(response.data[i].Deaths);\r\n                } else {\r\n                    i--;\r\n                }\r\n            }\r\n\r\n            // Checks if the last report is actually valid\r\n            const lastRep = (response.data[response.data.length-1].Confirmed!==0) ? 1 : 2;\r\n\r\n            // Pushes the last report\r\n            labelDate.push(response.data[response.data.length-lastRep].Date.slice(0, 10));\r\n            confirmedData.push(response.data[response.data.length-lastRep].Confirmed);\r\n            fatalData.push(response.data[response.data.length-lastRep].Deaths);\r\n            activeChartData.push(response.data[response.data.length-lastRep].Confirmed-response.data[response.data.length-lastRep].Recovered-response.data[response.data.length-lastRep].Deaths);\r\n\r\n            dailyRecoveredData.push(response.data[response.data.length-lastRep].Recovered);\r\n            dailyFatalData.push(response.data[response.data.length-lastRep].Deaths);\r\n\r\n            setDate(labelDate)\r\n            setConfirmed(confirmedData)\r\n            setFatal(fatalData)\r\n            setActiveChart(activeChartData)\r\n\r\n            setDailyRecovered(dailyRecoveredData)\r\n            setDailyFatal(dailyFatalData)\r\n        }\r\n        loadCountryTotalData();\r\n        loadCountrySummary();\r\n    }, [country]);\r\n\r\n    const newActive = (summary.Confirmed - summary.Recovered - summary.Deaths) - (previousSummary.Confirmed - previousSummary.Recovered - previousSummary.Deaths)\r\n    const nowActive = (summary.Confirmed - summary.Recovered - summary.Deaths)\r\n    \r\n    let activeStats = (nowActive*100)/summary.Confirmed;\r\n    let recoveredStats = (summary.Recovered*100)/summary.Confirmed;\r\n    let fatalStats = (summary.Deaths*100)/summary.Confirmed;\r\n\r\n    /**\r\n     * RENDER\r\n     */\r\n    return (\r\n        <>\r\n        <Header />\r\n        <div className=\"dashboardLocal\">\r\n            <div className=\"globalSummary\">\r\n                <h1> {summary.Country + \" Summary\"} </h1>\r\n                <strong>Total Confirmed Cases</strong> <p> {summary.Confirmed} </p>\r\n                <div className=\"globalDetails\">\r\n                    <li>\r\n                        <p className=\"new\" > {(newActive>0) ? \"+ \" + newActive : \"- \" + (newActive-newActive*2)} </p>\r\n                        <p className=\"dataGlobal\" > {nowActive} </p>\r\n                        <p> <strong>Active Cases</strong> </p>\r\n                    </li>\r\n                    <li>\r\n                        <p className=\"new\" > + {summary.Recovered-previousSummary.Recovered} </p>\r\n                        <p className=\"dataGlobal\" > {summary.Recovered} </p> \r\n                        <p> <strong>Recovered Cases</strong> </p>\r\n                    </li>\r\n                    <li>\r\n                        <p className=\"new\" > + {summary.Deaths - previousSummary.Deaths} </p>\r\n                        <p className=\"dataGlobal\" > {summary.Deaths} </p> \r\n                        <p> <strong>Fatal Cases</strong> </p>\r\n                    </li>\r\n                </div>\r\n            </div>\r\n\r\n            <Propragacao labelDate={date} confirmedData={confirmed} fatalData={fatal} />\r\n            <NowActive labelDate={date} activeData={activeChart} />\r\n\r\n            <Ranking page={\"Local\"} />\r\n\r\n            <StatsChart title={summary.Country} page={\"Local\"} activeStats={activeStats.toFixed(2)} recoveredStats={recoveredStats.toFixed(2)} fatalStats={fatalStats.toFixed(2)} />\r\n\r\n            <DailyData labelDate={date} recovered={dailyRecovered} fatal={dailyFatal} />\r\n        </div>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\n\r\nimport Main from './pages/Main';\r\nimport Local from './pages/Local';\r\n\r\nexport default function Routes() {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route path=\"/covid19-tracker/\" exact component={Main} />\r\n                <Route path=\"/covid19-tracker/:country\" exact component={Local}  children={<Local />} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n}","import React from 'react';\nimport './App.css';\n\nimport Routes from './routes';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));","module.exports = __webpack_public_path__ + \"static/media/arrow-up.3f31c184.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-down.d0efc757.svg\";"],"sourceRoot":""}